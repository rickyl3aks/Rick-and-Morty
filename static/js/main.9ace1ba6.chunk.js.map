{"version":3,"sources":["Components/Homepage.js","Components/API/RickAndMortyAPI.js","App.js","index.js"],"names":["RickandMorty","props","name","data","character","map","all","className","species","gender","origin","location","episode","length","status","src","image","alt","id","isLoading","onClick","style","textAlign","RickAndMortyAPI","componentDidMount","fetchData","a","setState","fetch","state","page","res","json","prev","results","this","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OA6EeA,MA3Ef,SAAsBC,GACpB,IAAMC,EAAOD,EAAME,KAAKC,UAAUC,KAAI,SAACC,GACrC,OACE,sBAAkBC,UAAU,OAA5B,UACE,sBAAKA,UAAU,OAAf,UACE,8BACE,4CACCD,EAAIJ,QAEP,8BACE,+CACCI,EAAIE,WAEP,8BACE,8CACCF,EAAIG,UAEP,8BACE,8CACCH,EAAII,OAAOR,QAEd,8BACE,2DACCI,EAAIK,SAAST,QAEhB,8BACE,+CACwB,IAAvBI,EAAIM,QAAQC,OAAZ,UACMP,EAAIM,QAAQC,OADlB,sBAEMP,EAAIM,QAAQC,OAFlB,gBAIH,8BACE,8CACCP,EAAIQ,OAAQ,IACb,sBACEP,UACiB,UAAfD,EAAIQ,OACA,QACwB,YAAfR,EAAIQ,OACb,SACA,cAKZ,8BACE,qBAAKC,IAAKT,EAAIU,MAAOC,IAAKX,EAAIJ,WA3CxBI,EAAIY,OAgDlB,OACE,gCACE,oBAAIX,UAAU,QAAd,4BACEN,EAAME,KAAKgB,UAGX,sBAAKZ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,wBAAQA,UAAU,MAAMa,QAAS,kBAAMnB,EAAMmB,WAA7C,oBAIDlB,EACD,qBAAKK,UAAU,gBAAf,SACE,wBAAQA,UAAU,MAAMa,QAAS,kBAAMnB,EAAMmB,WAA7C,uBAVJ,oBAAIC,MAAO,CAAEC,UAAW,UAAxB,4BCZOC,G,wDAvCb,aAAe,IAAD,8BACZ,gBAQFC,kBAAoB,WAClB,EAAKC,aAVO,EAadA,UAbc,sBAaF,8BAAAC,EAAA,6DACV,EAAKC,SAAS,CACZR,WAAW,IAFH,SAIQS,MAAM,mDAAD,OAC8B,EAAKC,MAAMC,OALtD,cAIJC,EAJI,gBAOSA,EAAIC,OAPb,OAOJ7B,EAPI,OAQV,EAAKwB,UAAS,SAACM,GACb,MAAO,CACLH,KAAoB,KAAdG,EAAKH,KAAc,EAAIG,EAAKH,KAAO,EACzCX,WAAW,EACXf,UAAWD,EAAK+B,YAZV,2CAXV,EAAKL,MAAQ,CACXV,WAAW,EACXf,UAAW,GACX0B,KAAM,GALI,E,qDA8BJ,IAAD,OACP,OACE,8BACE,cAAC,EAAD,CAAc3B,KAAMgC,KAAKN,MAAOT,QAAS,kBAAM,EAAKK,qB,GAlC9BW,cCQfC,E,uKARX,OACE,8BACE,cAAC,EAAD,U,GAJUD,aCClBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9ace1ba6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction RickandMorty(props) {\r\n  const name = props.data.character.map((all) => {\r\n    return (\r\n      <div key={all.id} className=\"grid\">\r\n        <div className=\"info\">\r\n          <p>\r\n            <strong>Name: </strong>\r\n            {all.name}\r\n          </p>\r\n          <p>\r\n            <strong>Species: </strong>\r\n            {all.species}\r\n          </p>\r\n          <p>\r\n            <strong>Gender: </strong>\r\n            {all.gender}\r\n          </p>\r\n          <p>\r\n            <strong>Origin: </strong>\r\n            {all.origin.name}\r\n          </p>\r\n          <p>\r\n            <strong>Last known location: </strong>\r\n            {all.location.name}\r\n          </p>\r\n          <p>\r\n            <strong>Seen in: </strong>\r\n            {all.episode.length === 1\r\n              ? `${all.episode.length} Episode`\r\n              : `${all.episode.length} Episodes`}\r\n          </p>\r\n          <p>\r\n            <strong>Status: </strong>\r\n            {all.status}{\" \"}\r\n            <span\r\n              className={\r\n                all.status === \"Alive\"\r\n                  ? \"green\"\r\n                  : \"red\" && all.status === \"unknown\"\r\n                  ? \"orange\"\r\n                  : \"red\"\r\n              }\r\n            ></span>\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <img src={all.image} alt={all.name} />\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <h1 className=\"title\">Rick and Morty</h1>\r\n      {!props.data.isLoading ? (\r\n        <h1 style={{ textAlign: \"center\" }}>Loading...</h1>\r\n      ) : (\r\n        <div className=\"container\">\r\n          <div className=\"btn-container\">\r\n            <button className=\"btn\" onClick={() => props.onClick()}>\r\n              Next\r\n            </button>\r\n          </div>\r\n          {name}\r\n          <div className=\"btn-container\">\r\n            <button className=\"btn\" onClick={() => props.onClick()}>\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RickandMorty;\r\n","import React, { Component } from \"react\";\r\nimport RickandMorty from \"../Homepage\";\r\n\r\nimport \"../styles/styles.css\";\r\n\r\nclass RickAndMortyAPI extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: false,\r\n      character: [],\r\n      page: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  fetchData = async () => {\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n    const res = await fetch(\r\n      `https://rickandmortyapi.com/api/character/?page=${this.state.page}`\r\n    );\r\n    const data = await res.json();\r\n    this.setState((prev) => {\r\n      return {\r\n        page: prev.page === 34 ? 1 : prev.page + 1,\r\n        isLoading: true,\r\n        character: data.results,\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <RickandMorty data={this.state} onClick={() => this.fetchData()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RickAndMortyAPI;\r\n","import React, { Component } from \"react\";\nimport RickAndMortyAPI from \"./Components/API/RickAndMortyAPI\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <RickAndMortyAPI />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}